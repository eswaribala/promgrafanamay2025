1. helm install postgres-exporter prometheus-community/prometheus-postgres-exporter
#create postgres exporter folder
#cd to postgres exporter folder
2.helm show values prometheus-community/prometheus-postgres-exporter > values.yaml
#update values.yaml
config:
  ## The datasource properties on config are passed through helm tpl function.
  ## ref: https://helm.sh/docs/developing_charts/#using-the-tpl-function
  datasource:
    # Specify one of both datasource or datasourceSecret
    host: 'postgres'
    user: postgres
    # Specify userFile if DB username is stored in a file.
    # For example, to use with vault-injector from Hashicorp
    userFile: ''
    userSecret: {}
    # Secret name
    #  name:
    # User key inside secret
    #  key:
    # Only one of password, passwordFile, passwordSecret and pgpassfile can be specified
    password: 'postgres'
    # Specify passwordFile if DB password is stored in a file.
    # For example, to use with vault-injector from Hashicorp
    passwordFile: ''
    # Specify passwordSecret if DB password is stored in secret.
    passwordSecret: {}
    # Secret name
    #  name:
    # Password key inside secret
    #  key:
    pgpassfile: ''
    # If pgpassfile is set, it is used to initialize the PGPASSFILE environment variable.
    # See https://www.postgresql.org/docs/14/libpq-pgpass.html for more info.
    port: "5432"
    database: 'customerdb'
    sslmode: disable
    extraParams: ''
  datasourceSecret: {}
    # Specifies if datasource should be sourced from secret value in format: postgresql://login:password@hostname:port/dbname?sslmode=disable
    # Multiple Postgres databases can be configured by comma separated postgres connection strings
    # Secret name
    #  name:
    # Connection string key inside secret
    #  key:
  disableCollectorDatabase: false
  disableCollectorBgwriter: false
  disableDefaultMetrics: false
  disableSettingsMetrics: false

#after updating db configuration
helm upgrade postgres-exporter prometheus-community/prometheus-postgres-exporter -f values.yaml
#expose grafana as service in localhost
kubectl expose deployment --port 9187 postgres-exporter-prometheus-postgres-exporter --type=LoadBalancer --name=postgresexporterservice
#adding job in prometheus values.yaml file

- job_name: 'postgres_exporter'
        static_configs:
          - targets: ['host.docker.internal:9187']

#upgrade helm
helm upgrade prometheus prometheus-community/prometheus -f values.yaml -n prometheus
